import java.util.Arrays;

public class ChocolateDistribution {
    public static int findMinDiff(int[] arr, int m) {
        int n = arr.length;

        // Edge case: Not enough packets or no students
        if (m == 0 || n == 0 || m > n) {
            return 0;
        }

        // Step 1: Sort the packets â€” makes comparison easier
        Arrays.sort(arr);

        // Minimum difference to start with max value
        int minDiff = Integer.MAX_VALUE;

        // Step 2: Check every window of size 'm'
        for (int i = 0; i + m - 1 < n; i++) {
            int currentDiff = arr[i + m - 1] - arr[i]; // max - min in current window

            // Keep track of the minimum diff encountered
            if (currentDiff < minDiff) {
                minDiff = currentDiff;
            }
        }

        return minDiff;
    }

    public static void main(String[] args) {
        int[] chocolates = {7, 3, 2, 4, 9, 12, 56};
        int students = 3;

        int result = findMinDiff(chocolates, students);
        System.out.println("Minimum difference is: " + result);
    }
}
